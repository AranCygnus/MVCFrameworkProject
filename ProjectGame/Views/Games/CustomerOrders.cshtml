@model IPagedList<OrderViewModel>
@using ProjectGame.ViewModels
@using X.PagedList
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Customer Orders";
    var status = ViewData["CurrentStatus"] as string;
    var statusList = ViewData["StatusList"];
}

<head>
    <link rel="stylesheet" href="~/css/styleGame.css" asp-append-version="true" />
</head>

<section>
    <div class="row">
        <!---------- Aside Sidebar ---------->
        @await Html.PartialAsync("_GameAside")

        <!---------- Main Content---------->
        <div class="col-md-9">
            <h2>Customer Orders</h2>

            <hr class="my-3">

            <!---------- Search ---------->
            <form asp-action="CustomerOrders" method="get" class="mb-3 d-flex align-items-center">
                <span class="form-label fw-bold search m-1">Status :</span>
                @Html.DropDownList("status", (IEnumerable<SelectListItem>)ViewBag.StatusList, "Select", new { @class = "form-select ms-2", style = "width:100px; height: 35px" })
                <input type="submit" value="Search" class="btn btn-primary ms-2" style="width:100px; height: 35px"/>
            </form>

            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success">@TempData["Message"]</div>
            }

            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <!--<th>Order ID</th>-->
                        <th style="width: 110px;">Name</th>
                        <th>Email</th>
                        <th style="width: 175px;">Order Date</th>
                        <th style="width: 110px;">Total</th>
                        <th style="width: 90px;">Status</th>
                        <th style="width: 85px;">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.Name</td>
                            <td>@order.Email</td>
                            <td>@order.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>@order.Total.ToString("C0")</td>
                            <td>
                                @switch (order.Status)
                                {
                                    case OrderStatus.Unpaid:
                                        <span class="badge bg-warning text-dark" style="width: 85px;">Unpaid</span>
                                        break;
                                    case OrderStatus.Paid:
                                        <span class="badge bg-success text-white" style="width: 85px;">Paid</span>
                                        break;
                                    case OrderStatus.Cancelled:
                                        <span class="badge bg-danger text-white" style="width: 85px;">Cancelled</span>
                                        break;
                                    case OrderStatus.Shipped:
                                        <span class="badge bg-info text-dark" style="width: 85px;">Shipped</span>
                                        break;
                                    case OrderStatus.Completed:
                                        <span class="badge bg-primary text-white" style="width: 85px;">Completed</span>
                                        break;
                                    default:
                                        break;
                                }
                            </td>
                            <td class="d-flex flex-column justify-content-center align-items-center gap-1">
                                <a asp-action="OrderDetails" asp-route-orderId="@order.OrderId" class="btn btn-outline-info btn-sm" style="width: 80px;">Details</a>

                                @if (order.Status == OrderStatus.Paid)
                                {
                                    <form asp-action="MarkShipped" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="orderId" value="@order.OrderId" />
                                        <button type="submit" class="btn btn-warning btn-sm" style="width: 80px;">Ship</button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!---------- Pagination ---------->
            <div class="d-flex flex-column align-items-center mt-4">
                <div>
                    @Html.PagedListPager(
                        Model,
                        page => Url.Action("CustomerOrders", new {
                            page,
                            status = ViewData["CurrentStatus"]
                        }),
                        new PagedListRenderOptions
                        {
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToIndividualPages = true,
                            LinkToIndividualPageFormat = "{0}",
                            UlElementClasses = new[] { "pagination"},
                            LiElementClasses = new[] { "page-item" },
                            PageClasses = new[] { "page-link" }
                        })
                </div>
            </div>

        </div>
    </div>
</section>
