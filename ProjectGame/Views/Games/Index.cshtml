@model IPagedList<ProjectGame.Models.Game>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent;

@{
    ViewData["Title"] = "Games";
    var currentSort = ViewData["CurrentSort"] as string;
}


<head>
    <!---------- CSS ---------->
    <link rel="stylesheet" href="~/css/styleGame.css" asp-append-version="true" />
    <!---------- icon ---------->
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
</head>

<section>
    <div class="row">
        <!---------- Aside Sidebar ---------->
        @await Html.PartialAsync("_GameAside")

        <!---------- Main Content---------->
        <div class="col-md-9">
            <h2>Games List</h2>

            <p>
                <a asp-action="Create" class="btn btn-primary m-2">Create New</a>
            </p>
            
            <!---------- Search ---------->
            @using (Html.BeginForm("Index", "Games", FormMethod.Get))
            {
                <div class="row">
                    <div class="col-md-3 d-flex flex-row m-2">
                        <span class="form-label fw-bold search m-1">Platform :</span>
                        @Html.DropDownList("PlatformID", (IEnumerable<SelectListItem>)ViewBag.PlatformID, "Select", new { @class = "form-select ms-2", style = "width:100px; height: 35px" })
                    </div>
                    <div class="col-md-4 d-flex flex-row m-2">
                        <span class="form-label fw-bold search m-1">Keywords :</span>
                        @Html.TextBox("sSearch", ViewData["CurrentFilter"] as string, new { @class = "form-control ms-2", style = "width:150px; height: 35px", placeholder = "Enter Keywords" })
                        <input type="submit" value="Search" class="btn btn-primary ms-2" style="width:100px; height: 35px"/>
                    </div>
                </div>
            }
            
            <!---------- Table ---------->
            <table class="table table-striped table-hover align-middle">
                <thead>
                    <tr>
                        <th style="width: 130px;">
                            @Html.DisplayName("Game Cover")
                        </th>
                        <th>
                            @Html.DisplayName("Title")
                            <a href="?sortOrder=@ViewData["TitleSortParm"]">
                                @if (currentSort == "Title")
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_up</span>
                                }
                                else
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_down</span>
                                }
            
                            </a>
                        </th>
                        <th style="width: 100px;">
                            @Html.DisplayName("Platform")
                        </th>
                        <th style="width: 180px;">
                            @Html.DisplayName("Release Date")
                            <a href="?sortOrder=@ViewData["ReleaseDateSortParm"]">
                                @if (currentSort == "ReleaseDate")
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_up</span>
                                }
                                else
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_down</span>
                                }
                            </a>
                        </th>
                        <th style="width: 110px;">
                            @Html.DisplayName("Price")
                            <a href="?sortOrder=@ViewData["PriceSortParm"]">
                                @if (currentSort =="price_desc")
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_up</span>
                                }
                                else
                                {
                                    <span class="material-symbols-outlined">keyboard_arrow_down</span>
                                }
            
                            </a>
                        </th>
                        <th style="width: 100px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.DataFiles != null)
                                {
                                    <img src="/Games/GetImage/@item.ID" alt="Game Cover" style="max-height: 100px;" />
                                }
                                else if (item.PlatformID == 1)
                                {
                                    <img src="~/images/noimages/PS5NoImage.jpg" alt="Game Cover" style="max-height: 100px;" />
                                }
                                else if (item.PlatformID == 2)
                                {
                                    <img src="~/images/noimages/NSNoImage.jpg" alt="Game Cover" style="max-height: 100px;" />
                                }
                                else
                                {
                                    <img src="~/images/noimages/XboxNoImage.jpg" alt="Game Cover" style="max-height: 100px;" />
                                }
                            </td>
                            <td class="text-wrap text-start">
                                @Html.DisplayFor(modeItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modeItem => item.Platform.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modeItem => item.ReleaseDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modeItem => item.Price)
                            </td>
                            <!---------- Button ---------->
                            <td class="align-middle">
                                <div class="d-flex flex-column justify-content-center align-items-center gap-2">
                                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-warning m-1" style="width:80px;">Edit</a>
                                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-info m-1" style="width:80px;">Details</a>
                                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-danger m-1" style="width:80px;">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            
            <!---------- Pagination ---------->
            <div class="d-flex flex-column align-items-center mt-4">
                <div>
                    @Html.PagedListPager(
                        Model,
                        page => Url.Action("Index", new {
                            page,
                            sSearch = ViewData["CurrentFilter"],
                            PlatformID = ViewData["CurrentPlatform"]
                        }),
                        new PagedListRenderOptions
                        {
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToIndividualPages = true,
                            LinkToIndividualPageFormat = "{0}",
                            UlElementClasses = new[] { "pagination"},
                            LiElementClasses = new[] { "page-item" },
                            PageClasses = new[] { "page-link" }
                        })
                </div>
            </div>

        </div>
    </div>

</section>

